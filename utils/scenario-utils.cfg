#define TWO_BROTHERS_CAMPAIGN_XP_MODIFIER
    experience_modifier={ON_DIFFICULTY 80 60 120}
#enddef

#define HERO_DEATHS
    [event]
        name=last breath
        [filter]
            id=Arvith
        [/filter]
        
        [message]
            speaker=Arvith
            message= _ "I cannot die like this, brother are you there?"
        [/message]
        [message]
            speaker=Baran
            message= _ "Success is not within our reach. I fear we have failed to defend not only each other, but everything that stands around us. I am sorry, Arvith."
        [/message]
        
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=last breath
        [filter]
            id=Baran
        [/filter]
        
        [message]
            speaker=Baran
            message= _ "Is this really how it ends, Arvith?"
        [/message]
        [message]
            speaker=Arvith
            message= _ "I cannot even dream of doing this without you, brother."
        [/message]
        
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=last breath
        [filter]
            id=Darken Volk
        [/filter]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef

#define OBJECTIVES_ONE_VILLAGE_RAZED
    [objectives]
        side=1
        [objective]
            description= _ "Defeat enemy leader"
            condition=win
        [/objective]
        [objective]
            description= _ "Death of Baran"
            condition=lose
        [/objective]
        [objective]
            description= _ "Death of Arvith"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs capture the barn"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs burn three villages (two left)"
            condition=lose
        [/objective]
        {TURNS_RUN_OUT}

        [gold_carryover]
            bonus=yes
            carryover_percentage=20
        [/gold_carryover]
    [/objectives]
    [objectives]
        side=2
        [objective]
            description= _ "Defeat enemy leader"
            condition=win
        [/objective]
        [objective]
            description= _ "Death of Arvith"
            condition=lose
        [/objective]
        [objective]
            description= _ "Death of Baran"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs capture the barn"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs burn three villages (two left)"
            condition=lose
        [/objective]
        {TURNS_RUN_OUT}

        [gold_carryover]
            bonus=yes
            carryover_percentage=20
        [/gold_carryover]
    [/objectives]
#enddef

#define OBJECTIVES_TWO_VILLAGES_RAZED
    [objectives]
        side=1
        [objective]
            description= _ "Defeat enemy leader"
            condition=win
        [/objective]
        [objective]
            description= _ "Death of Baran"
            condition=lose
        [/objective]
        [objective]
            description= _ "Death of Arvith"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs capture the barn"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs burn three villages (one left)"
            condition=lose
        [/objective]
        {TURNS_RUN_OUT}

        [gold_carryover]
            bonus=yes
            carryover_percentage=20
        [/gold_carryover]
    [/objectives]
    [objectives]
        side=2
        [objective]
            description= _ "Defeat enemy leader"
            condition=win
        [/objective]
        [objective]
            description= _ "Death of Arvith"
            condition=lose
        [/objective]
        [objective]
            description= _ "Death of Baran"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs capture the barn"
            condition=lose
        [/objective]
        [objective]
            description= _ "Orcs burn three villages (one left)"
            condition=lose
        [/objective]
        {TURNS_RUN_OUT}

        [gold_carryover]
            bonus=yes
            carryover_percentage=20
        [/gold_carryover]
    [/objectives]
#enddef

#define HI_MACE_EFFECTS DAMAGE NUMBER
    [object]
        id=hi_mace
        name= _ "Mace of Malice"
        image=items/mace.png
        description= _ "This mace will grant its owner a new attack."
        [filter]
            id=$unit.id
        [/filter]
        [effect]
            apply_to=new_attack
            name=mace
            description= _ "mace"
            type=impact
            range=melee
            damage={DAMAGE}
            number={NUMBER}
        [/effect]
        [effect]
            apply_to=new_animation
            id=hi_mace

            [attack_anim]
                [filter_attack]
                    name=mace
                [/filter_attack]

                start_time=-550

                {SOUND:HIT_AND_MISS mace.ogg mace-miss.ogg -100}
            [/attack_anim]
        [/effect]
    [/object]
#enddef

#define MACEMAN_ADVANCES
    [event]
        name=post advance
        first_time_only=no

        [filter]
            id=Maceman
        [/filter]

        [filter_condition]
            [variable]
                name=maceman_leveled_max
                boolean_equals=no
            [/variable]
        [/filter_condition]

        # It is impossible that unit levels up
        # to level 1, specifically in this case
        # to Spearman, since there is no unit that
        # levels into this unit available in this
        # campaign. Same goes for Knight, as no unit
        # is able to advance in Knight since there are
        # no Horsemen in this campaign. So filtering might
        # as well start from level 2s.
        #
        # For easier reading, I will separate different
        # variable filters into 4 [if] tags. Fourth is
        # for filtering if units advance from level 1 to
        # level 3. (not fourth literally)
        [if]
            [variable]
                name=maceman_picked_on_level_1
                boolean_equals=yes
            [/variable]
            # These are two possibilites a spearman
            # can advance into. To prevent Javelineer
            # from having increased damage we will have
            # to create a special [elseif] tag in which
            # we will first filter if unit advances from
            # level 1, or just AMLAs. In case of advancing,
            # the damage will be increased, otherwise not.
            [and]
                # This filters units after advancement.
                [have_unit] 
                    id=Maceman
                    type=Swordsman
                    [or]
                        type=Pikeman
                    [/or]
                [/have_unit]
            [/and]
            [then]
                [modify_unit]
                    [filter]
                        id=Maceman
                    [/filter]
                    [effect]
                        apply_to=attack
                        name=mace
                        increase_damage=5
                    [/effect]
                [/modify_unit]

                {VARIABLE maceman_leveled_once yes}
            [/then]
            [elseif]
                [variable]
                    name=maceman_picked_on_level_1
                    boolean_equals=yes
                [/variable]
                [and]
                    [have_unit] 
                        id=Maceman
                        type=Javelineer
                    [/have_unit]
                [/and]
                [then]
                    [modify_unit]
                        [filter]
                            id=Maceman
                        [/filter]
                        [effect]
                            apply_to=attack
                            name=mace
                            increase_damage=5
                        [/effect]
                    [/modify_unit]

                    # This variable is important since otherwise
                    # this event would keep occuring every time
                    # Maceman AMLAs.
                    {VARIABLE maceman_leveled_max yes}
                [/then]
            [/elseif]
        [/if]
        [if]
            # This is case if level 2 unit picked
            # up the mace.
            [variable]
                name=maceman_picked_on_level_2
                boolean_equals=yes
            [/variable]
            # These are all level 3 advancements of
            # units available to pick up the mace.
            [and]
                [have_unit] 
                    id=Maceman
                    type=Royal Guard
                    [or]
                        type=Halberdier
                    [/or]
                [/have_unit]
            [/and]
            [then]
                [modify_unit]
                    [filter]
                        id=Maceman
                    [/filter]
                    [effect]
                        apply_to=attack
                        name=mace
                        increase_damage=4
                    [/effect]
                [/modify_unit]

                {VARIABLE maceman_leveled_max yes}
            [/then]
            [elseif]
                [variable]
                    name=maceman_picked_on_level_2
                    boolean_equals=yes
                [/variable]
                [and]
                    [have_unit] 
                        id=Maceman
                        type=Javelineer
                    [/have_unit]
                [/and]
                [then]
                    {VARIABLE maceman_leveled_max yes}
                [/then]
            [/elseif]
        [/if]
        [if]
            [variable]
                name=maceman_leveled_once
                boolean_equals=yes
            [/variable]
            [and]
                [variable]
                    name=maceman_picked_on_level_1
                    boolean_equals=yes
                [/variable]
            [/and]
            # It's impossible to level to Knight in
            # this campaign, so variable from advancing
            # can only be stored when leveling spearman,
            # so the only possible level 3s are Royal Guard
            # and Halberdier.
            [and]
                [have_unit] 
                    id=Maceman
                    type=Royal Guard
                    [or]
                        type=Halberdier
                    [/or]
                [/have_unit]
            [/and]
            [then]
                [modify_unit]
                    [filter]
                        id=Maceman
                    [/filter]
                    # The reason to increase damage by 9 here
                    # is that engine overwrites those 5 damage
                    # that we added when unit leveled for the first time.
                    # Reason for increasing damage just by 4 in second [if]
                    # is that since unit picks mace when it's level 2
                    # mace has base damage of 13, and there is no overwriting
                    # there.
                    [effect]
                        apply_to=attack
                        name=mace
                        increase_damage=9
                    [/effect]
                [/modify_unit]

                {VARIABLE maceman_leveled_max yes}
            [/then]
        [/if]
        [if]
            [variable]
                name=maceman_picked_on_level_3
                boolean_equals=yes
            [/variable]
            [then]
                {VARIABLE maceman_leveled_max yes}
            [/then]
        [/if]
    [/event]
#enddef

#define CAPTURE_VILLAGE SIDE X Y
    [capture_village]
        side={SIDE}
        x,y={X},{Y}
    [/capture_village]
#enddef

#define HIGHLIGHT_HEX X Y IMAGE BACKGROUND_VALUE
    [scroll_to]
        x,y={X},{Y}
        check_fogged=no
    [/scroll_to]

    [repeat]
        times=3
        [do]
            [item]
                x,y={X},{Y}
                image={IMAGE}
            [/item]

            [redraw][/redraw]

            [delay]
                time=300
            [/delay]

            [remove_item]
                x,y={X},{Y}
            [/remove_item]

            [item]
                x,y={X},{Y}
                image={BACKGROUND_VALUE}
            [/item]

            [redraw][/redraw]

            [delay]
                time=300
            [/delay]
        [/do]
    [/repeat]
#enddef

#define DISALLOW_RECRUITS SIDE NUMBER
    # Since mainline macro doesn't match our needs,
    # as it clears variable data when this macro is
    # called again, we have to create our own one,
    # that will keep data in-between scenarios.
    [event]
        name=recruit
        first_time_only=no
        
        [filter]
            side={SIDE}
            type=Spearman, Bowman
        [/filter]
        
        {VARIABLE_OP level_1s_recruited_side_{SIDE} add 1}
        
        [if]
            [variable]
                name=level_1s_recruited_side_{SIDE}
                equals={NUMBER}
            [/variable]
            
            [then]
                [disallow_recruit]
                    side={SIDE}
                    type=Spearman, Bowman
                [/disallow_recruit]
            [/then]
        [/if]
    [/event]
#enddef
